/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.6.1/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'de.javaansehz.cluecumber-report-gradle-plugin' version "1.2.1"
    id "application"
}
apply plugin : "java"
ext {
    javaMainClass = "MainClass"
}
application {
    mainClass = javaMainClass
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
    jcenter()
    maven {
        url "https://jitpack.io"
    }
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:29.0-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.13'

    // Selenium
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.11.0'

    // Web Driver Manager
    implementation "io.github.bonigarcia:webdrivermanager:5.4.1"

    // BDD
    implementation 'io.cucumber:cucumber-java:6.6.1'
    implementation 'io.cucumber:cucumber-picocontainer:6.6.1'
    testImplementation 'io.cucumber:cucumber-junit:6.6.1'

    // Json libraries
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    implementation group: 'com.jayway.jsonpath', name: 'json-path', version: '2.1.0'
    implementation group: 'org.json', name: 'json', version: '20170516'

    // Logger
    implementation 'org.apache.logging.log4j:log4j-api:2.13.3'
    implementation 'org.apache.logging.log4j:log4j-core:2.13.3'
    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.30'

    //Reports
    implementation 'de.monochromata.cucumber:reporting-plugin:4.0.84'

    //Handle multiple environments
    implementation group: 'org.aeonbits.owner', name: 'owner', version: '1.0.8'

//    implementation group: 'net.lightbody.bmp', name: 'browsermob-core', version: '2.1.2'
    // https://mvnrepository.com/artifact/net.lightbody.bmp/browsermob-core
//    compile group: 'net.lightbody.bmp', name: 'browsermob-core', version: '2.1.5'
}

cluecumberReports {
    sourceJsonReportDirectory = "${projectDir}/reports/cucumber-reports"
    generatedHtmlReportDirectory = "${projectDir}/reports/html"
    expandBeforeAfterHooks = true
}

task uiTests(type: Test) {
    include '**/RunCucumberTests*'
    systemProperty "cucumber.filter.tags", System.getProperty("cucumber.filter.tags")
    systemProperty 'env', System.getProperty('env', 'env')
}
uiTests.finalizedBy generateCluecumberReports
tasks.withType(Test) {
    dependsOn cleanTest
    testLogging {
        showStandardStreams = true
    }
    systemProperties System.properties
}
test {
    systemProperty "cucumber.options", System.getProperty("cucumber.options")
}
task runWithJavaExec(type: JavaExec) {
    group = "Execution"
    description = "Run the main class with JavaExecTask"
    classpath = sourceSets.main.runtimeClasspath
    mainClass = javaMainClass
    systemProperty 'env', System.getProperty('env', 'env')
}
