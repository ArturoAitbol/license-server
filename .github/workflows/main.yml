# Workflow to build and deploy to Azure cloud the License Server UI  

name: License Server CI/CD

# Controls when the workflow will run
on:
  # workflow_dispatch:
  # Triggers the workflow on push to main branch
  push:
    branches: [ main ]
  # or pull request events but only for the main branch
  # pull_request:
  #   branches: [ main ]

env:
  AZURE_FUNCTIONAPP_NAME: tekvLicenseServerPOCFunction
  POM_XML_DIRECTORY: 'azure-functions/'
  POM_FUNCTIONAPP_NAME: myFunction-12345
  JAVA_VERSION: '1.8.x'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: azure/login@v1
      with:
          creds: ${{ secrets.AZURE_LICENSE_SERVER_CREDENTIALS }}
     
    - name: Setup Java Sdk ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{ env.JAVA_VERSION }}

    - name: 'Restore Project Dependencies Using Mvn'
      shell: bash
      run: |
        pushd './${{ env.POM_XML_DIRECTORY }}'
        ls
        mvn clean package
        mvn azure-functions:package
        popd

    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: './${{ env.POM_XML_DIRECTORY }}/target/azure-functions/${{ env.POM_FUNCTIONAPP_NAME }}'
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}

    - name: Use Node.js 12.20
      uses: actions/setup-node@v1
      with:
        node-version: '12.20'
          
    - name: Build Angular Integration web app
      run: |
        cd ./ui
        npm install
        npm run build
        
    - name: Upload to blob storagerun
      uses: azure/CLI@v1
      with:
        inlineScript: |
           az storage blob upload-batch --overwrite --account-name lswebappstorage --auth-mode key -d '$web' -s ./ui/dist
           
    - name: Purge CDN endpoint
      uses: azure/CLI@v1
      with:
        inlineScript: |
          # az cdn endpoint purge --content-paths  "/*" --profile-name "CDN_PROFILE_NAME" --name "CDN_ENDPOINT" --resource-group "RESOURCE_GROUP"
        
    - name: 'Run API tests'
      run: |
        ls
        npm install -g newman
        newman run ./tests/api/postman/LicenseServerAPIs.postman_collection.json -e ./tests/api/postman/LicenseServerAPIsEnv.postman_environment.json
    
  # Azure logout
    - name: logout
      run: |
            az logout
      if: always()
  # Debug (ssh into running host)
  #  - name: Debug on failure
  #    if: failure()
  #    uses: mxschmitt/action-tmate@v3
