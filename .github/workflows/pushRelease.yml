# Workflow to acquire release and deploy to Azure cloud the License Server components
name: Push Release

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release Version (use tags/vxx.xx.xx format)'
        required: true
        default: 'latest'
env:
  AZURE_FUNCTIONAPP_NAME: tekvizion-portal
  POM_FUNCTIONAPP_NAME: myFunction-12345

jobs:
  build:
      if: github.actor == 'tekviziondev'
      runs-on: ubuntu-latest
      steps:
        - uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_PRODUCTION_LICENSE_SERVER_CREDENTIALS }}
        - name: Install Zip
          uses: montudor/action-zip@v1
        
        - name: Retrieve release assets
          id: release_download
          uses: dsaltares/fetch-gh-release-asset@master
          with:
            version: '${{ github.event.inputs.release_version }}'
            regex: true
            file: "LS"
            target: "./"

        - name: Unzip Release Folder
          run: unzip -qq *.zip -d Release

        - name: Unzip Production UI
          run: unzip -qq ui-prod-release*.zip -d UI-prod-build
          working-directory: Release
        
        - name: Add Release version file
          run: echo "Released ${{ steps.release_download.outputs.version }} Build" > ./Release/UI-prod-build/license-server/ReleaseVersion.txt

        - name: Clear blob storage
          uses: azure/CLI@v1
          with:
            inlineScript: |
              az storage blob delete-batch --account-name tekvizionportal --auth-mode key -s '$web'
        
        - name: Upload to blob storage
          uses: azure/CLI@v1
          with:
            inlineScript: |
              az storage blob upload-batch --overwrite --account-name tekvizionportal --auth-mode key -d '$web' -s ./Release/UI-prod-build/license-server
        
        - name: Purge CDN endpoint
          uses: azure/CLI@v1
          with:
            inlineScript: |
              az cdn endpoint purge --content-paths  "/*" --profile-name ${{ secrets.AZURE_PRODUCTION_CDN_PROFILE_NAME }} --name ${{ secrets.AZURE_PRODUCTION_CDN_ENDPOINT }} --resource-group ${{ secrets.AZURE_PRODUCTION_RESOURCE_GROUP }}

        - name: Unzip Azure Functions UI
          run: unzip -qq af-release*.zip -d Azure-functions
          working-directory: Release
        
        - name: 'Run Azure Functions Action'
          uses: Azure/functions-action@v1
          id: fa
          with:
            app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
            package: './Release/Azure-functions/${{ env.POM_FUNCTIONAPP_NAME }}'
            publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE_PRODUCTION }}
        
        - name: Print deployed Release Version
          run: |
            echo 'Released ${{ steps.release_download.outputs.version }} Build'
            echo "Build-${{ steps.release_download.outputs.version }}" > ./ReleaseBuild.txt
        
        - name: Archive Release Build Version
          uses: actions/upload-artifact@v3
          with:
            name: prod-released-version
            path: ./ReleaseBuild.txt
          
        - name: logout
          run: az logout
          if: always()
